//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EC2_ManuelCabos.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDCLINICA2019 : DbContext
    {
        public BDCLINICA2019()
            : base("name=BDCLINICA2019")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Citas> Citas { get; set; }
        public virtual DbSet<Distrito> Distrito { get; set; }
        public virtual DbSet<Especialidad> Especialidad { get; set; }
        public virtual DbSet<Medicos> Medicos { get; set; }
        public virtual DbSet<Pacientes> Pacientes { get; set; }
    
        public virtual int sp_actualizar_cita(Nullable<int> nrocita, string codmed, string codpac, Nullable<int> tipo, Nullable<decimal> pago, Nullable<System.DateTime> fecha, string descrip)
        {
            var nrocitaParameter = nrocita.HasValue ?
                new ObjectParameter("nrocita", nrocita) :
                new ObjectParameter("nrocita", typeof(int));
    
            var codmedParameter = codmed != null ?
                new ObjectParameter("codmed", codmed) :
                new ObjectParameter("codmed", typeof(string));
    
            var codpacParameter = codpac != null ?
                new ObjectParameter("codpac", codpac) :
                new ObjectParameter("codpac", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var pagoParameter = pago.HasValue ?
                new ObjectParameter("pago", pago) :
                new ObjectParameter("pago", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_actualizar_cita", nrocitaParameter, codmedParameter, codpacParameter, tipoParameter, pagoParameter, fechaParameter, descripParameter);
        }
    
        public virtual int sp_eliminar_cita(Nullable<int> nrocita)
        {
            var nrocitaParameter = nrocita.HasValue ?
                new ObjectParameter("nrocita", nrocita) :
                new ObjectParameter("nrocita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_eliminar_cita", nrocitaParameter);
        }
    
        public virtual int sp_insertar_cita(Nullable<int> nrocita, string codmed, string codpac, Nullable<int> tipo, Nullable<decimal> pago, Nullable<System.DateTime> fecha, string descrip)
        {
            var nrocitaParameter = nrocita.HasValue ?
                new ObjectParameter("nrocita", nrocita) :
                new ObjectParameter("nrocita", typeof(int));
    
            var codmedParameter = codmed != null ?
                new ObjectParameter("codmed", codmed) :
                new ObjectParameter("codmed", typeof(string));
    
            var codpacParameter = codpac != null ?
                new ObjectParameter("codpac", codpac) :
                new ObjectParameter("codpac", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var pagoParameter = pago.HasValue ?
                new ObjectParameter("pago", pago) :
                new ObjectParameter("pago", typeof(decimal));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var descripParameter = descrip != null ?
                new ObjectParameter("descrip", descrip) :
                new ObjectParameter("descrip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertar_cita", nrocitaParameter, codmedParameter, codpacParameter, tipoParameter, pagoParameter, fechaParameter, descripParameter);
        }
    
        public virtual ObjectResult<sp_listar_citas_Result> sp_listar_citas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_listar_citas_Result>("sp_listar_citas");
        }
    
        public virtual ObjectResult<sp_medico_anio_Result> sp_medico_anio(string codmed, Nullable<int> anio)
        {
            var codmedParameter = codmed != null ?
                new ObjectParameter("codmed", codmed) :
                new ObjectParameter("codmed", typeof(string));
    
            var anioParameter = anio.HasValue ?
                new ObjectParameter("anio", anio) :
                new ObjectParameter("anio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_medico_anio_Result>("sp_medico_anio", codmedParameter, anioParameter);
        }
    
        public virtual ObjectResult<sp_detalle_cita_Result> sp_detalle_cita(Nullable<int> nrocita)
        {
            var nrocitaParameter = nrocita.HasValue ?
                new ObjectParameter("nrocita", nrocita) :
                new ObjectParameter("nrocita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_detalle_cita_Result>("sp_detalle_cita", nrocitaParameter);
        }
    
        public virtual ObjectResult<sp_medico_especilidad_Result> sp_medico_especilidad(string codesp)
        {
            var codespParameter = codesp != null ?
                new ObjectParameter("codesp", codesp) :
                new ObjectParameter("codesp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_medico_especilidad_Result>("sp_medico_especilidad", codespParameter);
        }
    }
}
