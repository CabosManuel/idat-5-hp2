//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoEC3ManuelCabos.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDVIDEOS2019Entities : DbContext
    {
        public BDVIDEOS2019Entities()
            : base("name=BDVIDEOS2019Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Actores> Actores { get; set; }
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Formatos> Formatos { get; set; }
        public virtual DbSet<Genero> Genero { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<Peliculas> Peliculas { get; set; }
        public virtual DbSet<Venta_Cabecera> Venta_Cabecera { get; set; }
        public virtual DbSet<Venta_Detalle> Venta_Detalle { get; set; }
    
        public virtual int sp_actualizar_precio(string cod_pel, Nullable<decimal> precio)
        {
            var cod_pelParameter = cod_pel != null ?
                new ObjectParameter("cod_pel", cod_pel) :
                new ObjectParameter("cod_pel", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_actualizar_precio", cod_pelParameter, precioParameter);
        }
    
        public virtual ObjectResult<sp_buscar_peliculas_Result> sp_buscar_peliculas(string cod_gen, Nullable<int> año)
        {
            var cod_genParameter = cod_gen != null ?
                new ObjectParameter("cod_gen", cod_gen) :
                new ObjectParameter("cod_gen", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_buscar_peliculas_Result>("sp_buscar_peliculas", cod_genParameter, añoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_vta_cab(string cod_cli, Nullable<decimal> total_vta)
        {
            var cod_cliParameter = cod_cli != null ?
                new ObjectParameter("cod_cli", cod_cli) :
                new ObjectParameter("cod_cli", typeof(string));
    
            var total_vtaParameter = total_vta.HasValue ?
                new ObjectParameter("total_vta", total_vta) :
                new ObjectParameter("total_vta", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_vta_cab", cod_cliParameter, total_vtaParameter);
        }
    
        public virtual int sp_vta_det(Nullable<int> num_vta, string cod_pel, Nullable<int> cant, Nullable<decimal> precio)
        {
            var num_vtaParameter = num_vta.HasValue ?
                new ObjectParameter("num_vta", num_vta) :
                new ObjectParameter("num_vta", typeof(int));
    
            var cod_pelParameter = cod_pel != null ?
                new ObjectParameter("cod_pel", cod_pel) :
                new ObjectParameter("cod_pel", typeof(string));
    
            var cantParameter = cant.HasValue ?
                new ObjectParameter("cant", cant) :
                new ObjectParameter("cant", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_vta_det", num_vtaParameter, cod_pelParameter, cantParameter, precioParameter);
        }
    }
}
